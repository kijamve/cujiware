---
import Layout from '../../layouts/Layout.astro';
import { requireSuperAdmin } from '../../middleware/auth.ts';
import { prisma } from '../../lib/prisma';
import plugins from '../../data/plugins.json';

const user = await requireSuperAdmin(Astro);
if (user instanceof Response) {
  return user;
}

// Obtener todas las versiones de plugins
const pluginVersions = await prisma.pluginVersion.findMany({
  orderBy: {
    created_at: 'desc'
  }
});

// Agrupar versiones por plugin
const versionsByPlugin = pluginVersions.reduce((acc, version) => {
  if (!acc[version.plugin_slug]) {
    acc[version.plugin_slug] = [];
  }
  acc[version.plugin_slug].push(version);
  return acc;
}, {} as Record<string, typeof pluginVersions>);
---

<Layout title="Dashboard Master - Cujiware" description="Panel de administración de Cujiware">
  <div class="min-h-screen bg-gray-50 py-12">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="bg-white shadow rounded-lg">
        <div class="px-4 py-5 sm:p-6">
          <div class="flex justify-between items-center mb-8">
            <h1 class="text-2xl font-bold text-gray-900">Dashboard Master</h1>
            <button
              id="logout-btn"
              class="inline-flex items-center justify-center px-3 py-2 border border-gray-300 text-sm leading-4 font-medium rounded-md text-red-700 bg-white hover:bg-red-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500"
            >
              Cerrar Sesión
            </button>
          </div>

          <!-- Tabs -->
          <div class="border-b border-gray-200">
            <nav class="-mb-px flex space-x-8" aria-label="Tabs">
              <button
                class="tab-button border-cuji-blue text-cuji-blue whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm"
                data-tab="plugins"
              >
                Plugins
              </button>
              <button
                class="tab-button border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm"
                data-tab="memberships"
              >
                Membresías
              </button>
            </nav>
          </div>

          <!-- Contenido de Plugins -->
          <div id="plugins-content" class="mt-8">
            <div class="flex justify-between items-center mb-6">
              <h2 class="text-lg font-medium text-gray-900">Gestión de Plugins</h2>
              <button
                id="upload-plugin-btn"
                class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-cuji-blue hover:bg-cuji-dark-blue focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-cuji-blue"
              >
                Subir Nueva Versión
              </button>
            </div>

            <div class="space-y-6">
              {plugins.map(plugin => (
                <div class="border rounded-lg p-6">
                  <div class="flex justify-between items-start mb-4">
                    <div>
                      <h3 class="text-lg font-medium text-gray-900">{plugin.name}</h3>
                      <p class="text-sm text-gray-500">{plugin.short_description}</p>
                    </div>
                    <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-800">
                      {plugin.platform.join(', ')}
                    </span>
                  </div>

                  <div class="mt-4">
                    <h4 class="text-sm font-medium text-gray-900 mb-2">Versiones</h4>
                    {versionsByPlugin[plugin.slug] ? (
                      <div class="space-y-2">
                        {versionsByPlugin[plugin.slug].map(version => (
                          <div class="flex items-center justify-between bg-gray-50 p-3 rounded-md">
                            <div>
                              <span class="text-sm font-medium text-gray-900">v{version.version}</span>
                              <span class="text-sm text-gray-500 ml-2">
                                {new Date(version.created_at).toLocaleDateString()}
                              </span>
                            </div>
                            <div class="flex space-x-2">
                              <button
                                class="text-cuji-blue hover:text-cuji-dark-blue text-sm font-medium"
                                data-version-id={version.id}
                                data-action="download"
                              >
                                Descargar
                              </button>
                              <button
                                class="text-red-600 hover:text-red-700 text-sm font-medium"
                                data-version-id={version.id}
                                data-action="delete"
                              >
                                Eliminar
                              </button>
                            </div>
                          </div>
                        ))}
                      </div>
                    ) : (
                      <p class="text-sm text-gray-500">No hay versiones disponibles</p>
                    )}
                  </div>
                </div>
              ))}
            </div>
          </div>

          <!-- Contenido de Membresías (inicialmente oculto) -->
          <div id="memberships-content" class="mt-8 hidden">
            <!-- Aquí irá el contenido de membresías -->
          </div>
        </div>
      </div>
    </div>
  </div>
</Layout>

<!-- Modal para subir nueva versión -->
<div id="upload-modal" class="hidden fixed inset-0 bg-gray-500 bg-opacity-75 flex items-center justify-center">
  <div class="bg-white rounded-lg p-6 max-w-md w-full">
    <div class="flex justify-between items-center mb-4">
      <h3 class="text-lg font-medium text-gray-900">Subir Nueva Versión</h3>
      <button class="close-modal text-gray-400 hover:text-gray-500">
        <span class="sr-only">Cerrar</span>
        <svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
        </svg>
      </button>
    </div>

    <form id="upload-form" class="space-y-4">
      <div>
        <label class="block text-sm font-medium text-gray-700 mb-1">Plugin</label>
        <select name="plugin_slug" required class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-cuji-blue focus:ring-cuji-blue sm:text-sm">
          {plugins.map(plugin => (
            <option value={plugin.slug}>{plugin.name}</option>
          ))}
        </select>
      </div>

      <div>
        <label class="block text-sm font-medium text-gray-700 mb-1">Versión</label>
        <input type="text" name="version" required placeholder="ej: 1.0.0" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-cuji-blue focus:ring-cuji-blue sm:text-sm">
      </div>

      <div>
        <label class="block text-sm font-medium text-gray-700 mb-1">Archivo ZIP</label>
        <input type="file" name="file" accept=".zip" required class="mt-1 block w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4 file:rounded-md file:border-0 file:text-sm file:font-medium file:bg-cuji-blue file:text-white hover:file:bg-cuji-dark-blue">
      </div>

      <div class="flex justify-end space-x-3 mt-6">
        <button type="button" class="close-modal px-4 py-2 border border-gray-300 rounded-md text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-cuji-blue">
          Cancelar
        </button>
        <button type="submit" class="px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-cuji-blue hover:bg-cuji-dark-blue focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-cuji-blue">
          Subir
        </button>
      </div>
    </form>
  </div>
</div>

<script>
  // Manejo de tabs
  const tabs = document.querySelectorAll('.tab-button');
  const contents = {
    plugins: document.getElementById('plugins-content'),
    memberships: document.getElementById('memberships-content')
  };

  tabs.forEach(tab => {
    tab.addEventListener('click', () => {
      const target = tab.getAttribute('data-tab');
      if (!target) return;
      
      // Actualizar estilos de tabs
      tabs.forEach(t => {
        t.classList.remove('border-cuji-blue', 'text-cuji-blue');
        t.classList.add('border-transparent', 'text-gray-500');
      });
      
      tab.classList.remove('border-transparent', 'text-gray-500');
      tab.classList.add('border-cuji-blue', 'text-cuji-blue');
      
      // Mostrar/ocultar contenido
      Object.keys(contents).forEach(key => {
        if (contents[key]) {
          contents[key].classList.toggle('hidden', key !== target);
        }
      });
    });
  });

  // Manejo del modal de subida
  const uploadBtn = document.getElementById('upload-plugin-btn');
  const uploadModal = document.getElementById('upload-modal');
  const closeModalBtns = document.querySelectorAll('.close-modal');
  const uploadForm = document.getElementById('upload-form');

  uploadBtn?.addEventListener('click', () => {
    uploadModal?.classList.remove('hidden');
  });

  closeModalBtns.forEach(btn => {
    btn.addEventListener('click', () => {
      uploadModal?.classList.add('hidden');
    });
  });

  uploadForm?.addEventListener('submit', async (e) => {
    e.preventDefault();
    const formData = new FormData(e.target as HTMLFormElement);
    
    try {
      const response = await fetch('/api/admin/plugins/upload', {
        method: 'POST',
        body: formData
      });

      if (response.ok) {
        alert('Versión subida correctamente');
        uploadModal?.classList.add('hidden');
        window.location.reload();
      } else {
        const error = await response.json();
        alert(error.message || 'Error al subir la versión');
      }
    } catch (error) {
      alert('Error al procesar la solicitud');
    }
  });

  // Manejo de acciones de versiones
  document.querySelectorAll('[data-action]').forEach(button => {
    button.addEventListener('click', async () => {
      const action = button.getAttribute('data-action');
      const versionId = button.getAttribute('data-version-id');
      
      if (!versionId) return;

      if (action === 'delete') {
        if (!confirm('¿Estás seguro de que deseas eliminar esta versión?')) return;

        try {
          const response = await fetch(`/api/admin/plugins/versions/${versionId}`, {
            method: 'DELETE'
          });

          if (response.ok) {
            alert('Versión eliminada correctamente');
            window.location.reload();
          } else {
            const error = await response.json();
            alert(error.message || 'Error al eliminar la versión');
          }
        } catch (error) {
          alert('Error al procesar la solicitud');
        }
      } else if (action === 'download') {
        window.location.href = `/api/admin/plugins/versions/${versionId}/download`;
      }
    });
  });

  // Logout
  const logoutBtn = document.getElementById('logout-btn');
  logoutBtn?.addEventListener('click', async () => {
    try {
      const response = await fetch('/api/admin/logout', {
        method: 'POST'
      });
      if (response.ok) {
        window.location.href = '/dashboard_master/login';
      }
    } catch (error) {
      console.error('Error al cerrar sesión:', error);
    }
  });
</script> 