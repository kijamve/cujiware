---
import Layout from '../layouts/Layout.astro';
import { requireAuth } from '../middleware/auth.ts';
import { prisma } from '../lib/prisma';
import UserInfo from '../components/dashboard/UserInfo.astro';
import BillingModal from '../components/dashboard/BillingModal.astro';
import PasswordModal from '../components/dashboard/PasswordModal.astro';
import Memberships from '../components/dashboard/Memberships.astro';
import type { UserWithMemberships } from '../types/auth';

const user = await requireAuth(Astro);
if (user instanceof Response) {
  return user;
}

// Obtener el usuario con sus membresías y planes
const userWithMemberships = await prisma.user.findUnique({
  where: { id: user.id },
  include: {
    memberships: {
      include: {
        plan: {
          select: {
            id: true,
            name: true,
            description: true,
            price: true,
            currency: true,
            interval: true,
            features: true,
            stripe_price_id: true,
            created_at: true,
            updated_at: true
          }
        },
        licenses: {
          include: {
            usages: {
              where: {
                last_used_at: {
                  gte: new Date(Date.now() - 45 * 24 * 60 * 60 * 1000)
                }
              },
              orderBy: {
                last_used_at: 'desc'
              }
            }
          }
        },
        payments: {
          orderBy: {
            created_at: 'desc'
          },
          take: 6
        }
      }
    }
  }
}) as UserWithMemberships;

if (!userWithMemberships) {
  return Astro.redirect('/mi-cuenta');
}

const isVenezuelan = userWithMemberships.country === 'VE';

// Obtener mensajes de la URL si existen
const error = Astro.url.searchParams.get('error');
const success = Astro.url.searchParams.get('success');
---

<Layout title="Dashboard - Cujiware" description="Gestiona tu cuenta y membresía de Cujiware">
  <div class="min-h-screen bg-gray-50 py-12">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      {error && (
        <div class="mb-4 rounded-md bg-red-50 p-4">
          <div class="flex">
            <div class="flex-shrink-0">
              <svg class="h-5 w-5 text-red-400" viewBox="0 0 20 20" fill="currentColor">
                <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd" />
              </svg>
            </div>
            <div class="ml-3">
              <h3 class="text-sm font-medium text-red-800">
                {error}
              </h3>
            </div>
          </div>
        </div>
      )}
      {success && (
        <div class="mb-4 rounded-md bg-green-50 p-4">
          <div class="flex">
            <div class="flex-shrink-0">
              <svg class="h-5 w-5 text-green-400" viewBox="0 0 20 20" fill="currentColor">
                <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd" />
              </svg>
            </div>
            <div class="ml-3">
              <h3 class="text-sm font-medium text-green-800">
                {success}
              </h3>
            </div>
          </div>
        </div>
      )}
      <div class="bg-white shadow rounded-lg">
        <div class="px-4 py-5 sm:p-6">
          <h1 class="text-2xl font-bold text-gray-900 mb-8">Mi Cuenta</h1>

          <UserInfo user={userWithMemberships} isVenezuelan={isVenezuelan} />
          {isVenezuelan && <BillingModal user={userWithMemberships} />}
          <PasswordModal />
          <Memberships memberships={userWithMemberships.memberships} isVenezuelan={isVenezuelan} />
        </div>
      </div>
    </div>
  </div>
</Layout>

<script>
  // Logout handling
  const logoutBtn = document.getElementById('logout-btn');
  logoutBtn?.addEventListener('click', async () => {
    try {
      const response = await fetch('/api/auth/logout', {
        method: 'POST'
      });
      if (response.ok) {
        window.location.href = '/mi-cuenta';
      }
    } catch (error) {
      console.error('Error al cerrar sesión:', error);
    }
  });

  // Abrir modal de facturación si el hash es #show-form-billing
  if (window.location.hash === '#show-form-billing') {
    const editBillingBtn = document.getElementById('edit-billing-btn');
    editBillingBtn?.click();
  }

  // Limpiar los mensajes de la URL después de mostrarlos
  if (window.location.search.includes('error=') || window.location.search.includes('success=')) {
    const url = new URL(window.location.href);
    url.searchParams.delete('error');
    url.searchParams.delete('success');
    window.history.replaceState({}, '', url);
  }
</script> 