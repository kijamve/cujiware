---
import type { UserWithMemberships } from '@/types/auth';

interface Props {
  user: UserWithMemberships;
}

const { user } = Astro.props;
---

<div id="edit-billing-modal" class="hidden fixed inset-0 bg-gray-500 bg-opacity-75 flex items-center justify-center">
  <div class="bg-white rounded-lg p-6 max-w-md w-full">
    <h3 class="text-lg font-medium text-gray-900 mb-4">Editar Datos de Facturación</h3>
    <form id="edit-billing-form" class="space-y-4">
      <div>
        <label class="block text-sm font-medium text-gray-700 mb-1">Razón Social (facturación)</label>
        <input type="text" name="billing_full_name" value={user.billing_full_name || ''} class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-cuji-blue focus:ring-cuji-blue sm:text-sm px-4 py-2.5">
      </div>
      <div>
        <label class="block text-sm font-medium text-gray-700 mb-1">Teléfono (facturación)</label>
        <input type="tel" name="billing_phone" value={user.billing_phone || ''} class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-cuji-blue focus:ring-cuji-blue sm:text-sm px-4 py-2.5">
      </div>
      <div>
        <label class="block text-sm font-medium text-gray-700 mb-1">RIF/Cédula (facturación)</label>
        <input type="text" name="billing_tax_id" value={user.billing_tax_id || ''} class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-cuji-blue focus:ring-cuji-blue sm:text-sm px-4 py-2.5">
      </div>
      <div>
        <label class="block text-sm font-medium text-gray-700 mb-1">Dirección (facturación)</label>
        <input type="text" name="billing_address" value={user.billing_address || ''} class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-cuji-blue focus:ring-cuji-blue sm:text-sm px-4 py-2.5">
      </div>
      <div class="flex justify-end space-x-3 mt-6">
        <button type="button" id="close-billing-modal" class="px-4 py-2 border border-gray-300 rounded-md text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-cuji-blue">
          Cancelar
        </button>
        <button type="submit" class="px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-cuji-blue hover:bg-cuji-dark-blue focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-cuji-blue">
          Guardar
        </button>
      </div>
    </form>
  </div>
</div>

<script>
  const editBillingBtn = document.getElementById('edit-billing-btn');
  const editBillingModal = document.getElementById('edit-billing-modal');
  const closeBillingModalBtn = document.getElementById('close-billing-modal');
  const editBillingForm = document.getElementById('edit-billing-form');

  // Función para abrir el modal
  const openBillingModal = () => {
    editBillingModal?.classList.remove('hidden');
  };

  // Función para cerrar el modal
  const closeBillingModal = () => {
    editBillingModal?.classList.add('hidden');
  };

  editBillingBtn?.addEventListener('click', openBillingModal);
  closeBillingModalBtn?.addEventListener('click', closeBillingModal);

  // Abrir modal automáticamente si el hash es #show-form-billing
  if (window.location.hash === '#show-form-billing') {
    openBillingModal();
    // Eliminar el hash de la URL sin recargar la página
    history.pushState("", document.title, window.location.pathname + window.location.search);
  }

  editBillingForm?.addEventListener('submit', async (e) => {
    e.preventDefault();
    const formData = new FormData(e.target as HTMLFormElement);
    const data = {
      billing_full_name: formData.get('billing_full_name'),
      billing_phone: formData.get('billing_phone'),
      billing_tax_id: formData.get('billing_tax_id'),
      billing_address: formData.get('billing_address'),
    };

    try {
      const response = await fetch('/api/user/update-billing', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(data)
      });

      if (response.ok) {
        window.location.reload();
      } else {
        const error = await response.json();
        alert(error.message || 'Error al actualizar los datos de facturación');
      }
    } catch (error) {
      alert('Error al actualizar los datos de facturación');
    }
  });
</script> 