---
import { prisma } from '../lib/prisma';
import type { Plan } from '@prisma/client';
import PricingCard from './PricingCard.astro';
import type { VenezuelaPaymentData } from './PricingTypes';

const plans = await prisma.plan.findMany({
  where: {
    is_visible: true
  },
  orderBy: {
    price: 'asc'
  }
});

let showVenezuelaModal = false;
let venezuelaModalData: VenezuelaPaymentData | null = null;

function openVenezuelaModal(data: VenezuelaPaymentData) {
  showVenezuelaModal = true;
  venezuelaModalData = data;
}
function closeVenezuelaModal() {
  showVenezuelaModal = false;
  venezuelaModalData = null;
}
---

<section id="pricing" class="py-20 bg-gray-50">
  <div class="container mx-auto px-4 sm:px-6 lg:px-8">
    <div class="text-center max-w-3xl mx-auto mb-16">
      <h2 class="text-3xl font-bold font-heading text-gray-900 mb-4">Planes de Suscripción</h2>
      <p class="text-lg text-gray-600">Elige el plan que mejor se adapte a tus necesidades</p>
    </div>
    
    <div class="grid grid-cols-1 md:grid-cols-3 gap-8 max-w-5xl mx-auto">
      {plans.map((plan: Plan) => (
        <PricingCard plan={plan} />
      ))}
    </div>
    
    <div class="mt-16 text-center max-w-3xl mx-auto">
      <div class="bg-blue-50 rounded-lg p-6 border border-blue-100">
        <h3 class="text-xl font-bold font-heading text-gray-900 mb-2">¿Necesitas múltiples dominios?</h3>
        <p class="text-gray-600 mb-4">Si administras múltiples tiendas, cada dominio requiere una membresía independiente. Contáctanos para descuentos por volumen a partir de 5 dominios.</p>
        <a href="#contact" class="inline-flex items-center text-cuji-blue hover:text-cuji-dark-blue font-medium">
          Contacta a nuestro equipo de ventas
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 ml-1" viewBox="0 0 20 20" fill="currentColor">
            <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd" />
          </svg>
        </a>
      </div>
    </div>
  </div>
  <div id="modal-root"></div>
</section>

<script>
  import type { VenezuelaPaymentData } from './PricingTypes';
  import './VenezuelaPaymentModal';

  document.addEventListener('DOMContentLoaded', () => {
    const buttons = document.querySelectorAll('[data-plan-id]') as NodeListOf<HTMLButtonElement>;
    
    buttons.forEach(button => {
      button.addEventListener('click', async (e) => {
        const clickedButton = e.currentTarget as HTMLButtonElement;
        const planId = clickedButton.dataset.planId;
        
        if (!planId) {
          console.error('No se encontró el ID del plan');
          return;
        }

        // Desactivar todos los botones y mostrar estado de carga
        buttons.forEach(btn => {
          btn.disabled = true;
          btn.classList.add('opacity-50', 'cursor-not-allowed');
        });
        clickedButton.innerHTML = `
          <svg class="animate-spin -ml-1 mr-3 h-5 w-5 text-white inline-block" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
            <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
            <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
          </svg>
          Procesando...
        `;

        try {
          const response = await fetch('/api/subscription/create', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({ plan: planId })
          });
          
          const data = await response.json();
          console.log('Datos recibidos del servidor:', data);

          if (response.status === 401) {
            window.location.href = '/mi-cuenta';
            return;
          }

          if (data.url) {
            window.location.href = data.url;
          } else if (data.payment_method === 'venezuela') {
            console.log('Creando modal con datos:', data);
            const modalRoot = document.getElementById('modal-root');
            if (modalRoot) {
              const modal = document.createElement('venezuela-payment-modal');
              const modalData = {
                payment_method: data.payment_method,
                plan_id: data.plan_id,
                price_usd: data.price_usd,
                price_bs: data.price_bs,
                bcv_rate: data.bcv_rate,
                name: data.name,
                billing_full_name: data.billing_full_name,
                billing_tax_id: data.billing_tax_id,
                billing_address: data.billing_address,
                billing_phone: data.billing_phone
              };
              console.log('Datos a pasar al modal:', modalData);
              modal.setAttribute('data', JSON.stringify(modalData));
              modalRoot.appendChild(modal);
            }
          } else {
            alert('Error al procesar la suscripción');
          }
        } catch (error) {
          alert('Error al procesar la suscripción');
        } finally {
          // Restaurar todos los botones
          buttons.forEach(btn => {
            btn.disabled = false;
            btn.classList.remove('opacity-50', 'cursor-not-allowed');
          });
          clickedButton.innerHTML = 'Seleccionar Plan';
        }
      });
    });
  });
</script>

<script>
  // Script para manejar el modal
  let modalInstance: any = null;

  window.addEventListener('show-venezuela-modal', ((event: CustomEvent) => {
    const modalRoot = document.getElementById('modal-root');
    if (!modalRoot) return;

    // Crear el componente modal
    const modal = document.createElement('venezuela-payment-modal');
    modal.setAttribute('data', JSON.stringify(event.detail));
    modalRoot.appendChild(modal);
    modalInstance = modal;
  }) as EventListener);

  window.addEventListener('close-venezuela-modal', () => {
    if (modalInstance) {
      modalInstance.remove();
      modalInstance = null;
    }
  });
</script>